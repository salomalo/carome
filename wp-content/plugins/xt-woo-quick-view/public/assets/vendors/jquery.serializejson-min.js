!function(e){if("function"==typeof define&&define.amd)define(["jquery"],e);else if("object"==typeof exports){var n=require("jquery");module.exports=e(n)}else e(window.jQuery||window.Zepto||window.$)}(function($){"use strict";$.fn.serializeJSON=function(e){var n,r,s,t,a,i,u,l,o,p,c,d,f;return n=$.serializeJSON,r=this,s=n.setupOpts(e),t=r.serializeArray(),n.readCheckboxUncheckedValues(t,s,r),a={},$.each(t,function(e,t){i=t.name,u=t.value,o=n.extractTypeAndNameWithNoType(i),p=o.nameWithNoType,c=o.type,c||(c=n.attrFromInputWithName(r,i,"data-value-type")),n.validateType(i,c,s),"skip"!==c&&(d=n.splitInputNameIntoKeysArray(p),l=n.parseValue(u,i,c,s),f=!l&&n.shouldSkipFalsy(r,i,p,c,s),f||n.deepSet(a,d,l,s))}),a},$.serializeJSON={defaultOptions:{checkboxUncheckedValue:void 0,parseNumbers:!1,parseBooleans:!1,parseNulls:!1,parseAll:!1,parseWithFunction:null,skipFalsyValuesForTypes:[],skipFalsyValuesForFields:[],customTypes:{},defaultTypes:{string:function(e){return String(e)},number:function(e){return Number(e)},boolean:function(e){var n=["false","null","undefined","","0"];return n.indexOf(e)===-1},null:function(e){var n=["false","null","undefined","","0"];return n.indexOf(e)===-1?e:null},array:function(e){return JSON.parse(e)},object:function(e){return JSON.parse(e)},auto:function(e){return $.serializeJSON.parseValue(e,null,null,{parseNumbers:!0,parseBooleans:!0,parseNulls:!0})},skip:null},useIntKeysAsArrayIndex:!1},setupOpts:function(e){var n,r,s,t,a,i;i=$.serializeJSON,null==e&&(e={}),s=i.defaultOptions||{},r=["checkboxUncheckedValue","parseNumbers","parseBooleans","parseNulls","parseAll","parseWithFunction","skipFalsyValuesForTypes","skipFalsyValuesForFields","customTypes","defaultTypes","useIntKeysAsArrayIndex"];for(n in e)if(r.indexOf(n)===-1)throw new Error("serializeJSON ERROR: invalid option '"+n+"'. Please use one of "+r.join(", "));return t=function(n){return e[n]!==!1&&""!==e[n]&&(e[n]||s[n])},a=t("parseAll"),{checkboxUncheckedValue:t("checkboxUncheckedValue"),parseNumbers:a||t("parseNumbers"),parseBooleans:a||t("parseBooleans"),parseNulls:a||t("parseNulls"),parseWithFunction:t("parseWithFunction"),skipFalsyValuesForTypes:t("skipFalsyValuesForTypes"),skipFalsyValuesForFields:t("skipFalsyValuesForFields"),typeFunctions:$.extend({},t("defaultTypes"),t("customTypes")),useIntKeysAsArrayIndex:t("useIntKeysAsArrayIndex")}},parseValue:function(e,n,r,s){var t,a;return t=$.serializeJSON,a=e,s.typeFunctions&&r&&s.typeFunctions[r]?a=s.typeFunctions[r](e):s.parseNumbers&&t.isNumeric(e)?a=Number(e):!s.parseBooleans||"true"!==e&&"false"!==e?s.parseNulls&&"null"==e&&(a=null):a="true"===e,s.parseWithFunction&&!r&&(a=s.parseWithFunction(a,n)),a},isObject:function(e){return e===Object(e)},isUndefined:function(e){return void 0===e},isValidArrayIndex:function(e){return/^[0-9]+$/.test(String(e))},isNumeric:function(e){return e-parseFloat(e)>=0},optionKeys:function(e){if(Object.keys)return Object.keys(e);var n,r=[];for(n in e)r.push(n);return r},readCheckboxUncheckedValues:function(e,n,r){var s,t,a,i,u,l;null==n&&(n={}),u=$.serializeJSON,s="input[type=checkbox][name]:not(:checked):not([disabled])",t=r.find(s).add(r.filter(s)),t.each(function(r,s){if(a=$(s),i=a.attr("data-unchecked-value"),null==i&&(i=n.checkboxUncheckedValue),null!=i){if(s.name&&s.name.indexOf("[][")!==-1)throw new Error("serializeJSON ERROR: checkbox unchecked values are not supported on nested arrays of objects like '"+s.name+"'. See https://github.com/marioizquierdo/jquery.serializeJSON/issues/67");e.push({name:s.name,value:i})}})},extractTypeAndNameWithNoType:function(e){var n;return(n=e.match(/(.*):([^:]+)$/))?{nameWithNoType:n[1],type:n[2]}:{nameWithNoType:e,type:null}},shouldSkipFalsy:function(e,n,r,s,t){var a=$.serializeJSON,i=a.attrFromInputWithName(e,n,"data-skip-falsy");if(null!=i)return"false"!==i;var u=t.skipFalsyValuesForFields;if(u&&(u.indexOf(r)!==-1||u.indexOf(n)!==-1))return!0;var l=t.skipFalsyValuesForTypes;return null==s&&(s="string"),!(!l||l.indexOf(s)===-1)},attrFromInputWithName:function(e,n,r){var s,t,a,i;return s=n.replace(/(:|\.|\[|\]|\s)/g,"\\$1"),t='[name="'+s+'"]',a=e.find(t).add(e.filter(t)),a.attr(r)},validateType:function(e,n,r){var s,t;if(t=$.serializeJSON,s=t.optionKeys(r?r.typeFunctions:t.defaultOptions.defaultTypes),n&&s.indexOf(n)===-1)throw new Error("serializeJSON ERROR: Invalid type "+n+" found in input name '"+e+"', please use one of "+s.join(", "));return!0},splitInputNameIntoKeysArray:function(e){var n,r;return r=$.serializeJSON,n=e.split("["),n=$.map(n,function(e){return e.replace(/\]/g,"")}),""===n[0]&&n.shift(),n},deepSet:function(e,n,r,s){var t,a,i,u,l,o;if(null==s&&(s={}),o=$.serializeJSON,o.isUndefined(e))throw new Error("ArgumentError: param 'o' expected to be an object or array, found undefined");if(!n||0===n.length)throw new Error("ArgumentError: param 'keys' expected to be an array with least one element");t=n[0],1===n.length?""===t?e.push(r):e[t]=r:(a=n[1],""===t&&(u=e.length-1,l=e[u],t=o.isObject(l)&&(o.isUndefined(l[a])||n.length>2)?u:u+1),""===a?!o.isUndefined(e[t])&&$.isArray(e[t])||(e[t]=[]):s.useIntKeysAsArrayIndex&&o.isValidArrayIndex(a)?!o.isUndefined(e[t])&&$.isArray(e[t])||(e[t]=[]):!o.isUndefined(e[t])&&o.isObject(e[t])||(e[t]={}),i=n.slice(1),o.deepSet(e[t],i,r,s))}}});